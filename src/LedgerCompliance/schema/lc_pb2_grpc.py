# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import lc_pb2 as lc__pb2
from . import schema_pb2 as schema__pb2


class LcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Set = channel.unary_unary(
                '/lc.schema.LcService/Set',
                request_serializer=schema__pb2.KeyValue.SerializeToString,
                response_deserializer=schema__pb2.Index.FromString,
                )
        self.Get = channel.unary_unary(
                '/lc.schema.LcService/Get',
                request_serializer=schema__pb2.Key.SerializeToString,
                response_deserializer=schema__pb2.Item.FromString,
                )
        self.SafeSet = channel.unary_unary(
                '/lc.schema.LcService/SafeSet',
                request_serializer=schema__pb2.SafeSetOptions.SerializeToString,
                response_deserializer=schema__pb2.Proof.FromString,
                )
        self.SafeGet = channel.unary_unary(
                '/lc.schema.LcService/SafeGet',
                request_serializer=schema__pb2.SafeGetOptions.SerializeToString,
                response_deserializer=schema__pb2.SafeItem.FromString,
                )
        self.CurrentRoot = channel.unary_unary(
                '/lc.schema.LcService/CurrentRoot',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=schema__pb2.Root.FromString,
                )
        self.Health = channel.unary_unary(
                '/lc.schema.LcService/Health',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=schema__pb2.HealthResponse.FromString,
                )
        self.ReportTamper = channel.unary_unary(
                '/lc.schema.LcService/ReportTamper',
                request_serializer=lc__pb2.ReportOptions.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class LcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SafeSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SafeGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CurrentRoot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportTamper(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=schema__pb2.KeyValue.FromString,
                    response_serializer=schema__pb2.Index.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=schema__pb2.Key.FromString,
                    response_serializer=schema__pb2.Item.SerializeToString,
            ),
            'SafeSet': grpc.unary_unary_rpc_method_handler(
                    servicer.SafeSet,
                    request_deserializer=schema__pb2.SafeSetOptions.FromString,
                    response_serializer=schema__pb2.Proof.SerializeToString,
            ),
            'SafeGet': grpc.unary_unary_rpc_method_handler(
                    servicer.SafeGet,
                    request_deserializer=schema__pb2.SafeGetOptions.FromString,
                    response_serializer=schema__pb2.SafeItem.SerializeToString,
            ),
            'CurrentRoot': grpc.unary_unary_rpc_method_handler(
                    servicer.CurrentRoot,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=schema__pb2.Root.SerializeToString,
            ),
            'Health': grpc.unary_unary_rpc_method_handler(
                    servicer.Health,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=schema__pb2.HealthResponse.SerializeToString,
            ),
            'ReportTamper': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportTamper,
                    request_deserializer=lc__pb2.ReportOptions.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lc.schema.LcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lc.schema.LcService/Set',
            schema__pb2.KeyValue.SerializeToString,
            schema__pb2.Index.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lc.schema.LcService/Get',
            schema__pb2.Key.SerializeToString,
            schema__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SafeSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lc.schema.LcService/SafeSet',
            schema__pb2.SafeSetOptions.SerializeToString,
            schema__pb2.Proof.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SafeGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lc.schema.LcService/SafeGet',
            schema__pb2.SafeGetOptions.SerializeToString,
            schema__pb2.SafeItem.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CurrentRoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lc.schema.LcService/CurrentRoot',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            schema__pb2.Root.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lc.schema.LcService/Health',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            schema__pb2.HealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportTamper(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lc.schema.LcService/ReportTamper',
            lc__pb2.ReportOptions.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
